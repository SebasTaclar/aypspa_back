// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  username       String   @unique
  password       String
  name           String
  role           String
  membershipPaid Boolean  @default(false) @map("membership_paid")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Client {
  id              Int      @id @default(autoincrement())
  name            String
  companyName     String?  @map("company_name")
  companyDocument String?  @map("company_document")
  rut             String?
  phoneNumber     String?  @map("phone_number")
  address         String?
  creationDate    String?  @map("creation_date")
  frequentClient  String?  @map("frequent_client")
  created         String?
  photoFileName   String?  @map("photo_file_name")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relations
  rents           Rent[]

  @@map("clients")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  code          String   @unique
  brand         String?
  priceNet      Decimal  @default(0) @map("price_net") @db.Decimal(10, 2)
  priceIva      Decimal  @default(0) @map("price_iva") @db.Decimal(10, 2)
  priceTotal    Decimal  @default(0) @map("price_total") @db.Decimal(10, 2)
  priceWarranty Decimal  @default(0) @map("price_warranty") @db.Decimal(10, 2)
  rented        Boolean  @default(false)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  rents         Rent[]

  @@map("products")
}

model Rent {
  id               Int      @id @default(autoincrement())
  quantity         Int      @default(1)
  deliveryDate     String?  @map("delivery_date")
  paymentMethod    String?  @map("payment_method") // Hacer opcional
  warrantyValue    Decimal  @default(0) @map("warranty_value") @db.Decimal(10, 2)
  warrantyType     String?  @default("Sin garant√≠a") @map("warranty_type")
  isFinished       Boolean  @default(false) @map("is_finished")
  isPaid           Boolean  @default(false) @map("is_paid")
  totalDays        Decimal? @map("total_days") @db.Decimal(10, 2)
  totalPrice       Decimal? @map("total_price") @db.Decimal(10, 2)
  observations     String?  @map("observations")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  // Foreign Keys
  clientId         Int      @map("client_id")
  productId        Int      @map("product_id")

  // Relations
  client           Client   @relation(fields: [clientId], references: [id], onDelete: Restrict)
  product          Product  @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@map("rents")
}
